@import 'dependancies/template'; 
@import 'dependancies/mixins';
@import 'dependancies/modifiers-layout';
@import 'dependancies/modifiers-visibility'; 

.grid {
    $grid: &;
    display: grid;
    grid-template-columns: repeat(12, 1fr);
    grid-gap: $gridGap;
    // margin-bottom: $gridGap;
    // grid-template-rows: repeat(6, 1fr);
    
    //Mobile Up 12 Columns or Default
    &_cols > *{
        grid-column: span 12;
    }
    &_col{
        grid-column: span 12;
        padding: $spacingXS;
    }

    //Control Mobile Up from Parent Level or Child Level
    @for $col from 1 through 12 {
        &_col-#{$col}, &#{$grid}_cols-#{$col} > * {
            grid-column: span #{$col};
        }
    }
    
    //Control the columns size from the child level for Mobile Landscape (XS) Up
    @each $size in $sizes { 
        @include mq($size) {
            @for $col from 1 through 12 {
                &_col-#{$size}-#{$col}, &#{$grid}_cols-#{$size}-#{$col} > * {
                    grid-column: span #{$col};
                }
            }
        }
    }

    //Offsets
    @each $size in $sizes { 
        @include mq($size) {
            @for $col from 1 through 12 {
                &_col-start-#{$size}-#{$col} {
                    grid-column-start:#{$col};
                }
                &_col-end-#{$size}-#{$col} {
                    grid-column-end:#{$col + 1};
                }
            }
        }
    }
    
    //Control the columns size from the child level for Mobile Landscape (XS) Up
    @each $size in $sizes { 
        @include mq($size) {
            @for $col from 1 through 12 {
                &_col-#{$size}-#{$col}, &#{$grid}_cols-#{$size}-#{$col} > * {
                    grid-column: span #{$col};
                }
            }
        }
    }
    
    //Grid modifiers
    
    ///Gap 
    &--no-gap {
        grid-gap: 0;
    }
    &--small-gap {
        grid-gap: $smallGridGap;
        margin-bottom: $smallGridGap;
    }
    &--no-row-gap {
        row-gap: 0;
    }
    &--no-col-gap {
        grid-gap: 0;
    }
    ///Order
    @each $size in $sizes { 
        @include mq($size) {
            &_col-#{$size}-first {
                order: -1;
            }
            &_col-#{$size}-last {
                order: 13;
            }
        }
    }
    ///Aligment
    &#{$grid}--align-center {
        justify-items: center;
    }
    &#{$grid}--align-center {
        justify-items: center;
    }
    legacy normal stretch center safe-center unsafe-center start end self-start self-end left right baseline first baseline last baseline
    &#{$grid}--align-bottom {
        align-items: baseline;
    }
    //Column Vertical Aligment Reference https://yoksel.github.io/grid-cheatsheet/#section-column-align
    @each $align in $aligns {
        &_col--v-align-#{$align} {
            align-self: #{$align};
        }
    }
    //Column Vertical Aligment Reference https://yoksel.github.io/grid-cheatsheet/#section-column-align
    //$aligns: auto, normal, stretch, center, start, end, self-start, self-end, baseline, first-baseline, last-baseline;
    @each $align in $aligns {
        &_col--align-#{$align} {
            justify-self: #{$align};
        }
    }
    
}
